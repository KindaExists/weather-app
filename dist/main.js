(()=>{const e=(()=>{const e=document.querySelector("#city"),t=document.querySelector("#weather_main"),n=document.querySelector("#weather_desc"),a=document.querySelector("#temp_main"),r=document.querySelector("#felt_temp"),o=document.querySelector("#humidity"),c=document.querySelector("#wind_speed");return{updateWeather:function(m){(async function(e){try{const t=await fetch(`http://api.openweathermap.org/data/2.5/weather?q=${e}&APPID=777eb91a46f021e3a9a72671b9b613b9`,{mode:"cors"}),n=await t.json();return{name:n.name,weatherMain:n.weather[0].main,weatherDesc:n.weather[0].description,temp:n.main.temp,feltTemp:n.main.feels_like,humidity:n.main.humidity,wind:n.wind.speed}}catch(e){throw e}})(m).then((m=>{e.textContent=m.name,t.textContent=m.weatherMain,n.textContent=m.weatherDesc;const i=Math.round(100*(m.temp-273.15))/100,d=Math.round(100*(m.feltTemp-273.15))/100;a.textContent=`${i}°`,r.textContent=`${d}°`,o.textContent=m.humidity,c.textContent=m.wind})).catch((()=>{alert("Location not found!")}))}}})();searchForm=document.forms.searchForm,searchForm.addEventListener("submit",(()=>{e.updateWeather(searchForm.city.value)})),e.updateWeather("London")})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFpbi5qcyIsIm1hcHBpbmdzIjoiTUFxQkEsTUFBTUEsRUFBVSxNQUNkLE1BQU1DLEVBQVdDLFNBQVNDLGNBQWMsU0FDbENDLEVBQWNGLFNBQVNDLGNBQWMsaUJBQ3JDRSxFQUFjSCxTQUFTQyxjQUFjLGlCQUNyQ0csRUFBV0osU0FBU0MsY0FBYyxjQUNsQ0ksRUFBV0wsU0FBU0MsY0FBYyxjQUNsQ0ssRUFBV04sU0FBU0MsY0FBYyxhQUNsQ00sRUFBWVAsU0FBU0MsY0FBYyxlQXFCekMsTUFBTyxDQUFDTyxjQW5CUixTQUF1QkMsSUE5QnpCQyxlQUE4QkQsR0FDNUIsSUFDRSxNQUFNRSxRQUFpQkMsTUFBTSxvREFBb0RILDJDQUFtRCxDQUFDSSxLQUFNLFNBQ3JJQyxRQUFhSCxFQUFTSSxPQVk1QixNQVZZLENBQ1ZDLEtBQU1GLEVBQVcsS0FDakJaLFlBQWFZLEVBQWMsUUFBRSxHQUFTLEtBQ3RDWCxZQUFhVyxFQUFjLFFBQUUsR0FBZ0IsWUFDN0NHLEtBQU1ILEVBQVcsS0FBUSxLQUN6QlQsU0FBVVMsRUFBVyxLQUFjLFdBQ25DUixTQUFVUSxFQUFXLEtBQVksU0FDakNJLEtBQU1KLEVBQVcsS0FBUyxPQUk1QixNQUFNSyxHQUNOLE1BQU1BLElBY05DLENBQWVYLEdBQ1pZLE1BQUtDLElBQ0p2QixFQUFTd0IsWUFBY0QsRUFBVSxLQUNqQ3BCLEVBQVlxQixZQUFjRCxFQUFpQixZQUMzQ25CLEVBQVlvQixZQUFjRCxFQUFpQixZQUczQyxNQUFNRSxFQUFVQyxLQUFLQyxNQUErQixLQUF4QkosRUFBVSxLQUFJLFNBQWlCLElBQ3JESyxFQUFjRixLQUFLQyxNQUFtQyxLQUE1QkosRUFBYyxTQUFJLFNBQWlCLElBQ25FbEIsRUFBU21CLFlBQWMsR0FBR0MsS0FDMUJuQixFQUFTa0IsWUFBYyxHQUFHSSxLQUMxQnJCLEVBQVNpQixZQUFjRCxFQUFjLFNBQ3JDZixFQUFVZ0IsWUFBY0QsRUFBVSxRQUNqQ00sT0FBTSxLQUNQQyxNQUFNLDZCQXhCRSxHQStCaEJDLFdBQWE5QixTQUFTK0IsTUFBa0IsV0FDeENELFdBQVdFLGlCQUFpQixVQUFVLEtBQ3BDbEMsRUFBUVUsY0FBY3NCLFdBQWlCLEtBQUVHLFVBSTNDbkMsRUFBUVUsY0FBYyxXIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2VhdGhlci1hcHAvLi9zcmMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiYXN5bmMgZnVuY3Rpb24gZ2V0V2VhdGhlckRhdGEobG9jYXRpb24pIHtcbiAgdHJ5IHtcbiAgICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKGBodHRwOi8vYXBpLm9wZW53ZWF0aGVybWFwLm9yZy9kYXRhLzIuNS93ZWF0aGVyP3E9JHtsb2NhdGlvbn0mQVBQSUQ9Nzc3ZWI5MWE0NmYwMjFlM2E5YTcyNjcxYjliNjEzYjlgLCB7bW9kZTogJ2NvcnMnfSk7XG4gICAgY29uc3QgZGF0YSA9IGF3YWl0IHJlc3BvbnNlLmpzb24oKTtcblxuICAgIGNvbnN0IHJldCA9IHtcbiAgICAgIG5hbWU6IGRhdGFbJ25hbWUnXSxcbiAgICAgIHdlYXRoZXJNYWluOiBkYXRhWyd3ZWF0aGVyJ11bMF1bJ21haW4nXSxcbiAgICAgIHdlYXRoZXJEZXNjOiBkYXRhWyd3ZWF0aGVyJ11bMF1bJ2Rlc2NyaXB0aW9uJ10sXG4gICAgICB0ZW1wOiBkYXRhWydtYWluJ11bJ3RlbXAnXSxcbiAgICAgIGZlbHRUZW1wOiBkYXRhWydtYWluJ11bJ2ZlZWxzX2xpa2UnXSxcbiAgICAgIGh1bWlkaXR5OiBkYXRhWydtYWluJ11bJ2h1bWlkaXR5J10sXG4gICAgICB3aW5kOiBkYXRhWyd3aW5kJ11bJ3NwZWVkJ10sXG4gICAgfTtcblxuICAgIHJldHVybiByZXQ7XG4gIH0gY2F0Y2goZXJyKSB7XG4gICAgdGhyb3cgZXJyO1xuICB9XG59XG5cbmNvbnN0IGRpc3BsYXkgPSAoKCkgPT4ge1xuICBjb25zdCBjaXR5TmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNjaXR5Jyk7XG4gIGNvbnN0IHdlYXRoZXJNYWluID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3dlYXRoZXJfbWFpbicpO1xuICBjb25zdCB3ZWF0aGVyRGVzYyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyN3ZWF0aGVyX2Rlc2MnKTtcbiAgY29uc3QgdGVtcE1haW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjdGVtcF9tYWluJyk7XG4gIGNvbnN0IGZlbHRUZW1wID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI2ZlbHRfdGVtcCcpO1xuICBjb25zdCBodW1pZGl0eSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNodW1pZGl0eScpO1xuICBjb25zdCB3aW5kU3BlZWQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjd2luZF9zcGVlZCcpO1xuXG4gIGZ1bmN0aW9uIHVwZGF0ZVdlYXRoZXIobG9jYXRpb24pIHtcbiAgICBnZXRXZWF0aGVyRGF0YShsb2NhdGlvbilcbiAgICAgIC50aGVuKHJlcyA9PiB7XG4gICAgICAgIGNpdHlOYW1lLnRleHRDb250ZW50ID0gcmVzWyduYW1lJ107XG4gICAgICAgIHdlYXRoZXJNYWluLnRleHRDb250ZW50ID0gcmVzWyd3ZWF0aGVyTWFpbiddO1xuICAgICAgICB3ZWF0aGVyRGVzYy50ZXh0Q29udGVudCA9IHJlc1snd2VhdGhlckRlc2MnXTtcblxuICAgICAgICAvLyBUZW1wZXJhdHVyZSBpcyBpbiBkZWdyZWVzIGNlbGNpdXMgYnkgZGVmYXVsdFxuICAgICAgICBjb25zdCBjZWxzaXVzID0gTWF0aC5yb3VuZCgocmVzWyd0ZW1wJ10gLSAyNzMuMTUpICogMTAwKSAvIDEwMFxuICAgICAgICBjb25zdCBmZWx0Q2Vsc2l1cyA9IE1hdGgucm91bmQoKHJlc1snZmVsdFRlbXAnXSAtIDI3My4xNSkgKiAxMDApIC8gMTAwXG4gICAgICAgIHRlbXBNYWluLnRleHRDb250ZW50ID0gYCR7Y2Vsc2l1c33CsGA7XG4gICAgICAgIGZlbHRUZW1wLnRleHRDb250ZW50ID0gYCR7ZmVsdENlbHNpdXN9wrBgO1xuICAgICAgICBodW1pZGl0eS50ZXh0Q29udGVudCA9IHJlc1snaHVtaWRpdHknXTtcbiAgICAgICAgd2luZFNwZWVkLnRleHRDb250ZW50ID0gcmVzWyd3aW5kJ107XG4gICAgICB9KS5jYXRjaCgoKSA9PiB7XG4gICAgICAgIGFsZXJ0KCdMb2NhdGlvbiBub3QgZm91bmQhJyk7XG4gICAgICB9KTtcbiAgfVxuXG4gIHJldHVybiB7dXBkYXRlV2VhdGhlcn07XG59KSgpO1xuXG5zZWFyY2hGb3JtID0gZG9jdW1lbnQuZm9ybXNbJ3NlYXJjaEZvcm0nXTtcbnNlYXJjaEZvcm0uYWRkRXZlbnRMaXN0ZW5lcignc3VibWl0JywgKCkgPT4ge1xuICBkaXNwbGF5LnVwZGF0ZVdlYXRoZXIoc2VhcmNoRm9ybVsnY2l0eSddLnZhbHVlKTtcbn0pO1xuXG4vLyBEZWZhdWx0IG9uLXN0YXJ0XG5kaXNwbGF5LnVwZGF0ZVdlYXRoZXIoJ0xvbmRvbicpIl0sIm5hbWVzIjpbImRpc3BsYXkiLCJjaXR5TmFtZSIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndlYXRoZXJNYWluIiwid2VhdGhlckRlc2MiLCJ0ZW1wTWFpbiIsImZlbHRUZW1wIiwiaHVtaWRpdHkiLCJ3aW5kU3BlZWQiLCJ1cGRhdGVXZWF0aGVyIiwibG9jYXRpb24iLCJhc3luYyIsInJlc3BvbnNlIiwiZmV0Y2giLCJtb2RlIiwiZGF0YSIsImpzb24iLCJuYW1lIiwidGVtcCIsIndpbmQiLCJlcnIiLCJnZXRXZWF0aGVyRGF0YSIsInRoZW4iLCJyZXMiLCJ0ZXh0Q29udGVudCIsImNlbHNpdXMiLCJNYXRoIiwicm91bmQiLCJmZWx0Q2Vsc2l1cyIsImNhdGNoIiwiYWxlcnQiLCJzZWFyY2hGb3JtIiwiZm9ybXMiLCJhZGRFdmVudExpc3RlbmVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9